{"version":3,"file":"static/js/5467.5a564626.chunk.js","mappings":"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","sources":["components/Game6/Key6.js","components/Game6/Keyboard6.js","components/Game6/Spacebar6.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport { Keyboard6Context } from './Keyboard6';\nimport { GoDotFill } from '../IconModule';\n\nfunction Key({ keyVal, guessKey, blankKey, keyLine }) {\n  const { addLetter, removeLetter } = useContext(Keyboard6Context);\n  const selectLetter = () => {\n    if (keyLine === 1 || keyLine === 2 || keyLine === 3) {\n        addLetter(keyVal);\n    } else if (keyLine === 0) {\n        removeLetter()\n    };\n  };\n\n  let iconComponent = null;\n\n  if (keyLine === 0 && keyVal === \"\") {\n    iconComponent = <GoDotFill />;\n  } else {\n    iconComponent = keyVal;\n  }\n\n  return (\n      <div className= {guessKey ? 'key guess_key' : blankKey ? 'key blank_key' : 'key'} onClick={selectLetter}>\n        {iconComponent}\n      </div>\n    )\n}\n\nexport default Key","import React, { useCallback, useContext, useEffect, useState, createContext, useRef } from 'react';\nimport { AppContext } from '../../App';\nimport { useKeydownEffect, addLetterToArray, removeLetterFromArray } from '../../utils';\nimport Key from './Key6';\nimport Spacebar from './Spacebar6';\n\nexport const Keyboard6Context = createContext();\n\nfunction Keyboard6() {\n    const { setGameChosen, keysColor, setKeysColor } = useContext(AppContext);\n    const [keys0, setKeys0] = useState([\"\", \"\"]);\n    const keys1 =[\"Q\", \"W\", \"\", \"R\", \"T\", \"Y\", \"\", \"\", \"\", \"P\"];\n    const [keys2, setKeys2] = useState([\"\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"]);\n    const keys3 = [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"];\n\n    const fauxKeys0 = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]\n    const allKeys = [keys1, keys2, keys3]\n\n    const correctWords = [\n        ['MY', 'BY'],\n        ['CRY', 'DRY', 'GYM', 'FLY', 'FRY', 'PLY', 'PRY', 'PYX', 'SHY', 'SKY', 'SLY', 'SPY', 'STY', 'TRY', 'WHY', 'WRY', 'WYN'],\n        ['CYST', 'GYMP', 'HYMN', 'LYNX', 'MYTH', 'SCRY', 'SKYR', 'SPRY', 'SYNC', 'WYCH', 'WYNN'],\n        ['CRYPT', 'DRYLY', 'FLYBY', 'GHYLL', 'GLYPH', 'LYMPH', 'LYNCH', 'MYRRH', 'NYMPH', 'PSYCH', 'PYGMY', 'SHYLY', 'SLYLY', 'SYLPH', 'SYNCH', 'SYNTH', 'THYMY', 'TRYST', 'WRYLY'],\n        ['FLYSCH', 'GLYCYL', 'MYRRHY', 'RHYTHM', 'SPRYLY']\n    ];\n\n    const [wordList, setWordList] = useState([]);\n\n    const [symbolResponse, setSymbolResponse] = useState(\"\")\n\n    const disableKeyPressRef = useRef(false);\n\n    const gameOver = () => {\n        let newKeysColor = [...keysColor];\n        newKeysColor[0][5] = 1;\n        setKeysColor(newKeysColor);\n        setGameChosen({ gameChosen: false, gameNumber: '' });\n    };\n\n    const goodWord = () => {\n        setSymbolResponse(\"check\");\n        disableKeyPressRef.current = true;\n        let newWordList = [...wordList];\n        newWordList.push(keys0.join(''));\n        setWordList(newWordList);\n        setTimeout(() => {\n            if (keys0.length < 6){\n                let length = keys0.length;\n                let updatedKeys0 = keys0\n                for (let i = 0; i < length; i++) {\n                updatedKeys0[i] = \"\";\n            }\n            updatedKeys0.push(\"\");\n            setKeys0(updatedKeys0);\n            } else {\n                gameOver()\n            }\n            setSymbolResponse(\"\");\n            disableKeyPressRef.current = false;\n        }, 1000);\n    };\n\n    const badWord = () => {\n        setSymbolResponse(\"times\");\n        disableKeyPressRef.current = true;\n        setTimeout(() => {\n            let length = keys0.length;\n            let updatedKeys0 = keys0\n            for (let i = 0; i < length; i++) {\n            updatedKeys0[i] = \"\";\n            }\n            setKeys0(updatedKeys0);\n            setSymbolResponse(\"\");\n            disableKeyPressRef.current = false;\n        }, 1000);\n    };\n\n\n    const checkWord = () => {\n        if (keys0.includes(\"\")) return;\n        const wordGuess = keys0.join('');\n        // console.log(correctWords[keys0.length - 2])\n        if (correctWords[keys0.length - 2].includes(wordGuess)) {\n            goodWord();\n        } else {\n            badWord();\n        }\n    };\n\n    const addLetter = addLetterToArray(keys0, setKeys0);\n\n    const removeLetter = removeLetterFromArray(keys0, setKeys0);\n\n    useEffect(() => {\n        if (keys0.length > 3 && keys0.findIndex((val) => val === '') === keys0.length - 1) {\n            setKeys2([\"\", \"\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"])\n        } else {\n            setKeys2([\"\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"])\n        }\n        checkWord()\n    }, [keys0]);\n\n    const handleKeyboard = useCallback((event) => {\n\n        if (disableKeyPressRef.current) {\n            event.preventDefault();\n            return;\n        } else if (event.key === \"Backspace\") {\n            removeLetter()\n        } else if (event.key === \" \") {\n            setGameChosen({gameChosen: false, gameNumber: ''});\n        } else {\n            fauxKeys0.forEach((key) => {\n                if (event.key.toUpperCase() === key.toUpperCase()) {\n                    removeLetter()\n                }            \n            });\n            for (const keys of allKeys) {\n              for (const key of keys) {\n                if (event.key.toLowerCase() === key.toLowerCase()) {\n                  addLetter(key);\n                  break;\n                }\n              }\n            }\n          }\n      }, [fauxKeys0, allKeys]);\n\n    // useEffect(() => {\n    //     document.addEventListener(\"keydown\", handleKeyboard);\n\n    //     return () => {\n    //         document.removeEventListener(\"keydown\", handleKeyboard);\n    //     };\n    // }, [handleKeyboard]);\n\n    useKeydownEffect(handleKeyboard, [handleKeyboard]);\n\n    return (\n        <div className=\"keyboard\" onKeyDown={handleKeyboard}>\n            <Keyboard6Context.Provider\n                value={{\n                addLetter,\n                removeLetter\n                }}>\n            <div className='line0'>{keys0.map((key, index) => {\n                const uniqueKey = `0-${index}`;\n                return <Key keyVal={key} key={uniqueKey} keyLine={0} guessKey />;\n            })}</div>\n            <div className='line1'>{keys1.map((key, index) => {\n                const uniqueKey = `1-${index}`;\n                return <Key keyVal={key} key={uniqueKey} keyLine={1} blankKey={key===\"\"} />;\n            })}</div>\n            <div className='line2'>\n                {keys2.map((key, index) => {\n                const uniqueKey = `2-${index}`;\n                return <Key keyVal={key} key={uniqueKey} keyLine={2} blankKey={key===\"\"} />;})}\n            </div>\n            <div className='line3'>{keys3.map((key, index) => {\n                const uniqueKey = `3-${index}`;\n                return <Key keyVal={key} key={uniqueKey} keyLine={3} />;\n                })}\n            </div>\n            <div className='line4'>< Spacebar keyVal={symbolResponse} /></div>\n            <div className='word_box'>\n                {wordList.map((word, index) => (\n                    <p key={index} className=\"word_box_word\" >{word}</p>\n            ))}</div>\n            </Keyboard6Context.Provider>\n        </div>\n    )\n\n}\n\nexport default Keyboard6","import React, { useContext } from 'react'\nimport { AppContext } from '../../App';\nimport { FaCheck, FaTimes } from '../IconModule';\n\nfunction Spacebar({ keyVal }) {\n  const { setGameChosen } = useContext(AppContext);\n  const selectLetter = () => {\n    setGameChosen({gameChosen: false, gameNumber: ''});\n    };\n\n  let iconComponent = null;\n  let iconColorClass = '';\n\n  if (keyVal === 'check') {\n    iconComponent = <FaCheck />;\n    iconColorClass = 'check-color';\n  } else if (keyVal === 'times') {\n    iconComponent = <FaTimes />;\n    iconColorClass = 'times-color';\n  }\n  \n\n  return (\n      <div className={`key spacebar ${iconColorClass}`} onClick={selectLetter}>\n        {iconComponent}\n      </div>\n    )\n}\n\nexport default Spacebar"],"names":["_ref","keyVal","guessKey","blankKey","keyLine","_useContext","useContext","Keyboard6Context","addLetter","removeLetter","iconComponent","_jsx","GoDotFill","className","onClick","children","createContext","AppContext","setGameChosen","keysColor","setKeysColor","_useState","useState","_useState2","_slicedToArray","keys0","setKeys0","keys1","_useState3","_useState4","keys2","setKeys2","keys3","fauxKeys0","allKeys","correctWords","_useState5","_useState6","wordList","setWordList","_useState7","_useState8","symbolResponse","setSymbolResponse","disableKeyPressRef","useRef","goodWord","current","newWordList","_toConsumableArray","push","join","setTimeout","length","updatedKeys0","i","newKeysColor","gameChosen","gameNumber","gameOver","checkWord","includes","wordGuess","addLetterToArray","removeLetterFromArray","useEffect","findIndex","val","handleKeyboard","useCallback","event","preventDefault","key","forEach","toUpperCase","_i","_allKeys","_step","keys","_iterator","_createForOfIteratorHelper","s","n","done","value","toLowerCase","err","e","f","useKeydownEffect","onKeyDown","_jsxs","Provider","map","index","uniqueKey","concat","Key","Spacebar","word","iconColorClass","FaCheck","FaTimes"],"sourceRoot":""}