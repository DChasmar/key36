{"version":3,"file":"static/js/7851.2fa95ff4.chunk.js","mappings":"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","sources":["components/GameU/HundredsGridU.js","components/GameU/HundredsUnitU.js","components/GameU/KeyU.js","components/GameU/KeyboardU.js","components/GameU/SpacebarU.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport HundredsUnit from './HundredsUnitU';\nimport { KeyboardUContext } from './KeyboardU';\n\nfunction HundredsGrid() {\n  const { numberArray, guess, xResponse } = useContext(KeyboardUContext);\n\n  const chunkArray = (arr, chunkSize) => {\n    const chunks = [];\n    for (let i = 0; i < arr.length; i += chunkSize) {\n      chunks.push(arr.slice(i, i + chunkSize));\n    }\n    return chunks;\n  };\n\n  const rows = chunkArray(numberArray.slice(0, 100), 10);\n  const nextIndex = numberArray.indexOf(\"\");\n\n  return (\n    <div className='hundreds_box'>\n      {rows.map((row, rowIndex) => (\n        <div className={`hundreds_line${rowIndex + 1}`} key={`hundreds_line${rowIndex + 1}`}>\n          {row.map((key, index) => {\n            // Check if it's the nextValue\n            const keyVal = rowIndex * 10 + index === nextIndex ? (xResponse || guess) : key;\n            return (\n            <HundredsUnit key={`hundreds_line${rowIndex + 1}-${index}`} \n            keyVal={keyVal}\n            color={rowIndex*10 + index + 1} \n            next={rowIndex*10 + index === nextIndex} />\n          )})}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default HundredsGrid","import React from 'react'\nimport { FaTimes } from '../IconModule';\n\nfunction HundredsUnit( { keyVal, color, next } ) {\n  const divisor = getComputedStyle(document.documentElement).getPropertyValue('--font-divisor');\n  console.log(divisor);\n  const fontSize = keyVal.length > 3 ? `${5 * divisor / keyVal.length}%` : `${2 * divisor}%`;\n\n  let boxColor;\n\n  const primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, \n    31, 37, 41, 43, 47, 53, 59, \n    61, 67, 71, 73, 79, 83, 89, 97]\n\n  if (keyVal !== \"\") {\n    if (color === 1) {\n      boxColor = '#96cf8d'; // green\n    } else if (primes.includes(color)) {\n      boxColor = '#d9d91e'; // yellow\n    } else if (color > 1 && !primes.includes(color)) {\n      boxColor = '#23a7fa'; //blue\n    }\n  } else {\n    boxColor = '#ddd';\n  } \n\n  let iconComponent = null;\n\n  if (keyVal === 'times') {\n    iconComponent = <FaTimes />;\n  } else {\n    iconComponent = keyVal;\n  }\n\n  return (\n    <div className= {'key hundreds_key'} \n      style= {next ? { backgroundColor: '#ddd' } : { backgroundColor: boxColor, fontSize }}>\n        {iconComponent}\n    </div>\n  )\n}\n\nexport default HundredsUnit","import React, { useContext } from 'react'\nimport { KeyboardUContext } from './KeyboardU';\n\nfunction Key({ keyVal, dark, clickableKey, symbol }) {\n  const { addNumber } = useContext(KeyboardUContext);\n  const selectLetter = () => {\n    if (clickableKey) {\n      addNumber(keyVal); \n    }};\n\n  return (\n      <div className={symbol ? 'key mathsymbol_key' : dark ? 'key dark_key' : 'key'} onClick={selectLetter}>\n        {keyVal}\n      </div>\n    )\n}\n\nexport default Key","import React, { useCallback, useContext, useEffect, useState, createContext, useRef } from 'react';\nimport { AppContext } from '../../App';\nimport { useKeydownEffect } from '../../utils';\nimport Key from './KeyU';\nimport Spacebar from './SpacebarU';\nimport HundredsGrid from './HundredsGridU'\n\nexport const KeyboardUContext = createContext();\n\nfunction KeyboardU() {\n    const { setGameChosen, keysColor, setKeysColor } = useContext(AppContext);\n    const keys0 = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\n    const [guess, setGuess] = useState(\"\");\n\n    const [numberArray, setNumberArray] = useState([\n        \"  \", \"2\", \"3\", \"22\", \"5\", \"23\", \"7\", \"222\", \"33\", \"25\",\n        \"11\", \"\", \"13\", \"\", \"\", \"\", \"17\", \"\", \"19\", \"\",\n        \"\", \"\", \"23\", \"\", \"\", \"\", \"\", \"\", \"29\", \"\",\n        \"31\", \"\", \"\", \"\", \"\", \"\", \"37\", \"\", \"\", \"\",\n        \"41\", \"\", \"43\", \"\", \"\", \"\", \"47\", \"\", \"\", \"\",\n        \"\", \"\", \"53\", \"\", \"\", \"\", \"\", \"\", \"59\", \"\",\n        \"61\", \"\", \"\", \"\", \"\", \"\", \"67\", \"\", \"\", \"\",\n        \"71\", \"\", \"73\", \"\", \"\", \"\", \"\", \"\", \"79\", \"\",\n        \"\", \"\", \"83\", \"\", \"\", \"\", \"\", \"\", \"89\", \"\",\n        \"\", \"\", \"\", \"\", \"\", \"\", \"97\", \"\", \"\", \"\"\n      ]);\n\n    const primeArray = [\n        \"  \", \"2\", \"3\", \"22\", \"5\", \"23\", \"7\", \"222\", \"33\", \"25\",\n        \"11\",'223', '13', '27', '35', '2222', '17', '233', '19', '225', \n        '37', '211', '23', '2223', '55', '213', '333', '227', '29', '235', \n        '31', '22222', '311', '217', '57', '2233', '37', '219', '313', '2225', \n        '41', '237', '43', '2211', '335', '223', '47', '22223', '77', '255', \n        '317', '2213', '53', '2333', '511', '2227', '319', '229', '59', '2235', \n        '61', '231', '337', '222222', '513', '2311', '67', '2217', '323', '257', \n        '71', '22233', '73', '237', '355', '2219', '711', '2313', '79', '22225', \n        '3333', '241', '83', '2237', '517', '243', '329', '22211', '89', '2335', \n        '713', '2223', '331', '247', '519', '222223', '97', '277', '3311', '2255'\n    ];\n\n    const [symbolResponse, setSymbolResponse] = useState(\"\");\n    const [xResponse, setXResponse] = useState(\"\");\n\n    const disableKeyPressRef = useRef(false);\n\n    const gameOver = () => {\n        disableKeyPressRef.current = true;\n        setSymbolResponse(\"check\");\n        setTimeout(() => {\n            setSymbolResponse(\"\");\n            let newKeysColor = [...keysColor];\n            newKeysColor[1][6] = 1;\n            setKeysColor(newKeysColor);\n            setGameChosen({ gameChosen: false, gameNumber: '' });\n            disableKeyPressRef.current = false;\n        }, 1000);\n    }\n\n    const badGuess = () => {\n        setXResponse(\"times\");\n        disableKeyPressRef.current = true;\n        setTimeout(() => {\n            setGuess(\"\");\n            setXResponse(\"\");\n            disableKeyPressRef.current = false;\n        }, 500);\n    }\n\n    const checkGuess = () => {\n        let newNumberArray = [...numberArray];\n        if (numberArray.includes(\"\")) {\n            const guessIndex = numberArray.indexOf(\"\");\n            if (guess === primeArray[guessIndex]) {\n                newNumberArray[guessIndex] = guess;\n                setNumberArray(newNumberArray)\n                setGuess(\"\");\n                if (newNumberArray[numberArray.length - 1] === \"2255\") {\n                    gameOver()\n                }\n            } else if (guess.length === primeArray[guessIndex].length) {\n                badGuess();\n            }\n        }\n    }\n\n    const addNumber = (key) => {\n        let newGuess = guess.concat(key);\n        setGuess(newGuess);\n    }\n\n    const removeNumber = () => {\n        if (guess.length > 0) {\n            let newGuess = guess.slice(0, -1);\n            setGuess(newGuess);\n        }\n    }\n\n    useEffect(() => {\n        if (guess !== \"\") {\n            checkGuess();\n        }\n    }, [guess]);\n\n    const handleKeyboard = useCallback((event) => {\n        if (disableKeyPressRef.current) {\n            event.preventDefault();\n            return;\n        } else if (event.key === \"Backspace\") {\n            removeNumber()\n        } else if (event.key === \" \") {\n            setGameChosen({gameChosen: false, gameNumber: ''});\n        } else {\n            keys0.forEach((key) => {\n                if (event.key === key) {\n                    addNumber(key)\n            }});\n        }\n    });\n\n    useKeydownEffect(handleKeyboard, [handleKeyboard]);\n\n    return (\n        <div className=\"keyboard\" onKeyDown={handleKeyboard}>\n            <KeyboardUContext.Provider\n                value={{\n                addNumber,\n                numberArray,\n                primeArray, \n                guess, \n                xResponse}}>\n            <div className='line0'>{keys0.map((key, index) => {\n                const uniqueKey = `0-${index}`;\n                return <Key keyVal={key} key={uniqueKey} clickableKey={true} />;\n            })}</div>\n            <div className='line1'><HundredsGrid /></div>\n            <div className='line2'>< Spacebar keyVal={symbolResponse} /></div>\n            </KeyboardUContext.Provider>\n        </div>\n    )\n\n}\n\nexport default KeyboardU","import React, { useContext } from 'react'\nimport { AppContext } from '../../App';\nimport { FaCheck } from '../IconModule';\n\nfunction Spacebar({ keyVal }) {\n  const { setGameChosen} = useContext(AppContext);\n  const selectLetter = () => {\n    setGameChosen({gameChosen: false, gameNumber: ''});\n  };\n\n  let iconComponent = null;\n  let iconColorClass = '';\n\n  if (keyVal === 'check') {\n    iconComponent = <FaCheck />;\n    iconColorClass = 'check-color';\n  }\n\n  return (\n      <div className={`key spacebar ${iconColorClass}`}  onClick={selectLetter}>\n        {iconComponent}\n      </div>\n    )\n}\n\nexport default Spacebar"],"names":["_useContext","useContext","KeyboardUContext","numberArray","guess","xResponse","rows","arr","chunkSize","chunks","i","length","push","slice","chunkArray","nextIndex","indexOf","_jsx","className","children","map","row","rowIndex","concat","key","index","keyVal","HundredsUnit","color","next","_ref","divisor","getComputedStyle","document","documentElement","getPropertyValue","console","log","boxColor","fontSize","primes","includes","iconComponent","FaTimes","style","backgroundColor","dark","clickableKey","symbol","addNumber","onClick","createContext","AppContext","setGameChosen","keysColor","setKeysColor","keys0","_useState","useState","_useState2","_slicedToArray","setGuess","_useState3","_useState4","setNumberArray","primeArray","_useState5","_useState6","symbolResponse","setSymbolResponse","_useState7","_useState8","setXResponse","disableKeyPressRef","useRef","checkGuess","newNumberArray","_toConsumableArray","guessIndex","current","setTimeout","newKeysColor","gameChosen","gameNumber","newGuess","useEffect","handleKeyboard","useCallback","event","preventDefault","removeNumber","forEach","useKeydownEffect","onKeyDown","_jsxs","Provider","value","uniqueKey","Key","HundredsGrid","Spacebar","iconColorClass","FaCheck"],"sourceRoot":""}