{"version":3,"file":"static/js/3659.013d9f47.chunk.js","mappings":"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","sources":["components/GameS/HundredsGridS.js","components/GameS/HundredsUnitS.js","components/GameS/KeyS.js","components/GameS/KeyboardS.js","components/GameS/SpacebarS.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport HundredsUnit from './HundredsUnitS';\nimport { KeyboardSContext } from './KeyboardS';\n\nfunction HundredsGrid() {\n  const { colorArray } = useContext(KeyboardSContext);\n\n  const hundredArray = [\n    \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\",\n    \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\n    \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\",\n    \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\",\n    \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\",\n    \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\", \"60\",\n    \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70\",\n    \"71\", \"72\", \"73\", \"74\", \"75\", \"76\", \"77\", \"78\", \"79\", \"80\",\n    \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"90\",\n    \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\", \"100\"\n    ];\n\n  const chunkArray = (arr, chunkSize) => {\n    const chunks = [];\n    for (let i = 0; i < arr.length; i += chunkSize) {\n      chunks.push(arr.slice(i, i + chunkSize));\n    }\n    return chunks;\n  };\n\n  const rows = chunkArray(hundredArray.slice(0, 100), 10);\n  const nextIndex = colorArray.indexOf(\"\");\n\n  return (\n    <div className='hundreds_box'>\n      {rows.map((row, rowIndex) => (\n        <div className={`hundreds_line${rowIndex + 1}`} key={`hundreds_line${rowIndex + 1}`}>\n          {row.map((key, index) => {\n            // Check if it's the nextValue\n            return (\n            <HundredsUnit key={`hundreds_line${rowIndex + 1}-${index}`} \n            keyVal={key}\n            color={colorArray[rowIndex*10 + index]}\n            next={rowIndex*10 + index === nextIndex} />\n          )})}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default HundredsGrid","import React from 'react'\nimport { FaTimes } from '../IconModule';\n\nfunction HundredsUnit( { keyVal, color, next } ) {\n\n    let boxColor;\n\n    const squares = [\"1\", \"4\", \"9\", \"16\", \"25\", \"36\", \"49\", \"64\", \"81\", \"100\"];\n\n    const primes = [\"2\", \"3\", \"5\", \"7\", \"11\", \"13\", \"17\", \"19\", \"23\", \"29\", \n        \"31\", \"37\", \"41\", \"43\", \"47\", \"53\", \"59\", \n        \"61\", \"67\", \"71\", \"73\", \"79\", \"83\", \"89\", \"97\"];\n\n    if (color !== \"\") {\n        if (squares.includes(keyVal)) {\n        boxColor = '#96cf8d'; // green\n        } else if (primes.includes(keyVal)) {\n        boxColor = '#d9d91e'; // yellow\n        } else if (!squares.includes(keyVal) && !primes.includes(keyVal)) {\n        boxColor = '#23a7fa'; //blue\n        }\n    } else {\n        boxColor = '#ddd';\n    } \n\n    let iconComponent = null;\n\n    if (keyVal === 'times') {\n        iconComponent = <FaTimes />;\n    } else {\n        iconComponent = keyVal;\n    }\n\n    return (\n        <div className= {'key hundreds_key'} \n        style= {{ backgroundColor: boxColor }}>\n            {iconComponent}\n        </div>\n    )\n}\n\nexport default HundredsUnit","import React, { useContext } from 'react'\nimport { KeyboardSContext } from './KeyboardS';\n\nfunction Key({ keyVal, clickableKey }) {\n    const { addNumber } = useContext(KeyboardSContext);\n    const selectLetter = () => {\n    \n    if (clickableKey) {\n      addNumber(keyVal); \n    }};\n\n    let boxColor;\n\n    if (keyVal === \"1\") {\n    boxColor = '#96cf8d'; // green\n    } else if (keyVal === \"2\") {\n    boxColor = '#d9d91e'; // yellow\n    } else if (keyVal === \"3\") {\n    boxColor = '#23a7fa'; //blue\n    }\n\n  return (\n      <div className='key' style={{ backgroundColor: boxColor }} onClick={selectLetter}>\n        {keyVal}\n      </div>\n    )\n}\n\nexport default Key","import React, { useCallback, useContext, useEffect, useState, createContext, useRef } from 'react';\nimport { AppContext } from '../../App';\nimport { useKeydownEffect } from '../../utils';\nimport Key from './KeyS';\nimport Spacebar from './SpacebarS';\nimport HundredsGrid from './HundredsGridS'\n\nexport const KeyboardSContext = createContext();\n\nfunction KeyboardS() {\n    const { setGameChosen, keysColor, setKeysColor } = useContext(AppContext);\n    const keys0 = [\"1\", \"2\", \"3\"];\n    const [guess, setGuess] = useState(\"\");\n\n    const [colorArray, setColorArray] = useState([\n        \"1\", \"2\", \"2\", \"1\", \"2\", \"3\", \"2\", \"3\", \"1\", \"3\",\n        \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \n        \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \n        \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \n        \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \n        \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \n        \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \n        \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \n        \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \n        \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"\n    ]);\n\n    const primeSquareArray = [\n        \"1\", \"2\", \"2\", \"1\", \"2\", \"3\", \"2\", \"3\", \"1\", \"3\",\n        \"2\", \"3\", \"2\", \"3\", \"3\", \"1\", \"2\", \"3\", \"2\", \"3\",\n        \"3\", \"3\", \"2\", \"3\", \"1\", \"3\", \"3\", \"3\", \"2\", \"3\",\n        \"2\", \"3\", \"3\", \"3\", \"3\", \"1\", \"2\", \"3\", \"3\", \"3\",\n        \"2\", \"3\", \"2\", \"3\", \"3\", \"3\", \"2\", \"3\", \"1\", \"3\",\n        \"3\", \"3\", \"2\", \"3\", \"3\", \"3\", \"3\", \"3\", \"2\", \"3\",\n        \"2\", \"3\", \"3\", \"1\", \"3\", \"3\", \"2\", \"3\", \"3\", \"3\",\n        \"2\", \"3\", \"2\", \"3\", \"3\", \"3\", \"3\", \"3\", \"2\", \"3\",\n        \"1\", \"3\", \"2\", \"3\", \"3\", \"3\", \"3\", \"3\", \"2\", \"3\",\n        \"3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"2\", \"3\", \"3\", \"1\"\n    ];\n\n    const wordColors = [\n        { word: 'Square', color: '#96cf8d' },\n        { word: 'Prime', color: '#d9d91e' },\n        { word: 'Composite', color: '#23a7fa' }\n    ];\n    \n    const [symbolResponse, setSymbolResponse] = useState(\"\");\n\n    const disableKeyPressRef = useRef(false);\n\n    const gameOver = () => {\n        disableKeyPressRef.current = true;\n        setSymbolResponse(\"check\");\n        setTimeout(() => {\n            setSymbolResponse(\"\");\n            let newKeysColor = [...keysColor];\n            newKeysColor[2][1] = 1;\n            setKeysColor(newKeysColor);\n            setGameChosen({ gameChosen: false, gameNumber: '' });\n            disableKeyPressRef.current = false;\n        }, 4000);\n    }\n\n    const badGuess = () => {\n        setSymbolResponse(\"times\");\n        disableKeyPressRef.current = true;\n        setTimeout(() => {\n            let newColorArray = [...colorArray]\n            const guessIndex = colorArray.indexOf(\"\");\n            for (let i = 0; i < guessIndex % 10; i++) {\n                newColorArray[guessIndex - 1 - i] = \"\";\n            }\n            setColorArray(newColorArray);\n            setGuess(\"\");\n            setSymbolResponse(\"\");\n            disableKeyPressRef.current = false;\n        }, 500);\n    }\n\n    const checkGuess = () => {\n        let newColorArray = [...colorArray];\n        if (colorArray.includes(\"\")) {\n            const guessIndex = colorArray.indexOf(\"\");\n            if (guess === primeSquareArray[guessIndex]) {\n                newColorArray[guessIndex] = guess;\n                setColorArray(newColorArray)\n                setGuess(\"\");\n                if (newColorArray[colorArray.length - 1] === \"1\") {\n                    gameOver()\n                }\n            } else if (guess.length === primeSquareArray[guessIndex].length) {\n                badGuess();\n            }\n        }\n    }\n\n    const addNumber = (key) => {\n        let newGuess = guess.concat(key);\n        setGuess(newGuess);\n    }\n\n    const removeNumber = () => {\n        if (guess.length > 0) {\n            let newGuess = guess.slice(0, -1);\n            setGuess(newGuess);\n        }\n    }\n\n    useEffect(() => {\n        if (guess !== \"\") {\n            checkGuess();\n        }\n    }, [guess]);\n\n    const handleKeyboard = useCallback((event) => {\n        if (disableKeyPressRef.current) {\n            event.preventDefault();\n            return;\n        } else if (event.key === \"Backspace\") {\n            removeNumber()\n        } else if (event.key === \" \") {\n            setGameChosen({gameChosen: false, gameNumber: ''});\n        } else {\n            keys0.forEach((key) => {\n                if (event.key === key) {\n                    addNumber(key)\n            }});\n        }\n    });\n\n    useKeydownEffect(handleKeyboard, [handleKeyboard]);\n\n    return (\n        <div className=\"keyboard\" onKeyDown={handleKeyboard}>\n            <KeyboardSContext.Provider\n                value={{\n                addNumber,\n                colorArray,\n                primeSquareArray, \n                guess}}>\n            <div className='line0'>{keys0.map((key, index) => {\n                const uniqueKey = `0-${index}`;\n                return <Key keyVal={key} key={uniqueKey} clickableKey={true} />;\n            })}</div>\n            <div className='line1'><HundredsGrid /></div>\n            <div className='line2'>< Spacebar keyVal={symbolResponse} /></div>\n            <div className='line3'>\n            {symbolResponse === \"check\" && (\n                <h2>\n                    {wordColors.map(({ word, color }, index) => (\n                        <span key={index} style={{ color }}>\n                        {word}{' '}\n                        </span>\n                    ))}\n                </h2>\n            )}\n            </div>\n            </KeyboardSContext.Provider>\n        </div>\n    )\n\n}\n\nexport default KeyboardS","import React, { useContext } from 'react'\nimport { AppContext } from '../../App';\nimport { FaCheck, FaTimes } from '../IconModule';\n\nfunction Spacebar({ keyVal }) {\n  const { setGameChosen} = useContext(AppContext);\n  const selectLetter = () => {\n    setGameChosen({gameChosen: false, gameNumber: ''});\n  };\n\n  let iconComponent = null;\n  let iconColorClass = '';\n\n  if (keyVal === 'check') {\n    iconComponent = <FaCheck />;\n    iconColorClass = 'check-color';\n  } else if (keyVal === 'times') {\n    iconComponent = <FaTimes />;\n    iconColorClass = 'times-color';\n }\n\n  return (\n      <div className={`key spacebar ${iconColorClass}`}  onClick={selectLetter}>\n        {iconComponent}\n      </div>\n    )\n}\n\nexport default Spacebar"],"names":["colorArray","useContext","KeyboardSContext","rows","arr","chunkSize","chunks","i","length","push","slice","chunkArray","nextIndex","indexOf","_jsx","className","children","map","row","rowIndex","concat","key","index","HundredsUnit","keyVal","color","next","_ref","boxColor","squares","primes","includes","iconComponent","FaTimes","style","backgroundColor","clickableKey","addNumber","onClick","createContext","_useContext","AppContext","setGameChosen","keysColor","setKeysColor","keys0","_useState","useState","_useState2","_slicedToArray","guess","setGuess","_useState3","_useState4","setColorArray","primeSquareArray","_useState5","_useState6","symbolResponse","setSymbolResponse","disableKeyPressRef","useRef","checkGuess","newColorArray","_toConsumableArray","guessIndex","current","setTimeout","newKeysColor","gameChosen","gameNumber","newGuess","useEffect","handleKeyboard","useCallback","event","preventDefault","removeNumber","forEach","useKeydownEffect","onKeyDown","_jsxs","Provider","value","uniqueKey","Key","HundredsGrid","Spacebar","word","iconColorClass","FaCheck"],"sourceRoot":""}