{"version":3,"file":"static/js/4681.313dec7e.chunk.js","mappings":"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","sources":["components/Game8/Key8.js","components/Game8/Keyboard8.js","components/Game8/Spacebar8.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport { Keyboard8Context } from './Keyboard8';\nimport { GoDotFill } from '../IconModule';\n\nfunction Key({ keyVal, guessKey, clickableKey, symbol }) {\n  const { addNumber } = useContext(Keyboard8Context);\n  const selectLetter = () => {\n    if (clickableKey) {\n      addNumber(keyVal); \n    }\n  };\n  \n  let iconComponent = null;\n\n  if (!clickableKey && keyVal === \"\") {\n    iconComponent = <GoDotFill />;\n  } else {\n    iconComponent = keyVal;\n  }\n\n  return (\n      <div className={symbol ? 'key mathsymbol_key' : guessKey ? 'key guess_key' : 'key'} onClick={selectLetter}>\n        {iconComponent}\n      </div>\n    )\n}\n\nexport default Key","import React, { useCallback, useContext, useEffect, useState, createContext, useRef } from 'react';\nimport { AppContext } from '../../App';\nimport { useKeydownEffect } from '../../utils';\nimport Key from './Key8';\nimport Spacebar from './Spacebar8';\n\nexport const Keyboard8Context = createContext();\n\nfunction Keyboard8() {\n    const { setGameChosen, keysColor, setKeysColor } = useContext(AppContext);\n    const [keys0, setKeys0] = useState([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]);\n    const [keys1, setKeys1] = useState([\"\", \"\"]);\n    const [keys2, setKeys2] = useState([\"x\", \"\"]);\n    const [keys3, setKeys3] = useState([\"\", \"\"]);\n    const [keys4, setKeys4] = useState([\"+\", \"\", \"\", \" \"]);\n    const [keys5, setKeys5] = useState([\"\", \"\"]);\n\n    const [symbolResponse, setSymbolResponse] = useState(\"\");\n\n    const disableKeyPressRef = useRef(false);\n\n    const gameOver = () => {\n        setSymbolResponse(\"check\");\n        setTimeout(() => {\n            let newKeysColor = [...keysColor];\n            newKeysColor[0][7] = 1;\n            setKeysColor(newKeysColor);\n            setGameChosen({ gameChosen: false, gameNumber: '' });\n        }, 1000);\n    }\n\n    const resetBadProduct = () => {\n        disableKeyPressRef.current = true;\n        setSymbolResponse(\"times\");\n        setTimeout(() => {\n            setKeys0([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]);\n            setKeys1([\"\", \"\"]);\n            setKeys2([\"x\", \"\"]);\n            setKeys3([\"\", \"\"]);\n            setSymbolResponse(\"\");\n            disableKeyPressRef.current = false;\n        }, 500);\n    }\n\n    const resetBadSum = () => {\n        disableKeyPressRef.current = true;\n        setSymbolResponse(\"times\");\n        setTimeout(() => {\n            setKeys4([\"x\",\"\", \"\", \" \"]);\n            setKeys5([\"\", \"\"]);\n            setSymbolResponse(\"\");\n            disableKeyPressRef.current = false;\n        }, 500);\n}\n\n    const findProduct = () => {\n        if (keys1.includes(\"\") || keys2.includes(\"\")) {\n            return;\n        } else {\n            const keys1Int = parseInt(keys1.join(\"\"));\n            const keys2Int = parseInt(keys2[1]);\n            const product = keys1Int*keys2Int;\n            if (product > 9 && product < 100) {\n                const digitsArray = product.toString().split('');\n                const bothDigitsExistInKeys0 = digitsArray.every((digit) => keys0.includes(digit));\n                if (bothDigitsExistInKeys0) {\n                    setKeys3(digitsArray);\n                    let newKeys0 = [...keys0];\n                    digitsArray.forEach((val) => {\n                        let returnIndex = keys0.indexOf(val);\n                        newKeys0[returnIndex] = \"\";\n                    })\n                    setKeys0(newKeys0);\n                } else {\n                    let newDigitsArray = [...digitsArray];\n                    digitsArray.forEach((val) => {\n                        if (!keys0.includes(val)) {\n                            let returnIndex = digitsArray.indexOf(val);\n                            newDigitsArray[returnIndex] = \"\";\n                        };\n                    })\n                    setKeys3(newDigitsArray);\n                    resetBadProduct()\n                }\n            } else {\n                resetBadProduct()\n            }\n        }\n    }\n\n    const findSum = () => {\n        if (keys3.includes(\"\") || keys4[1] === \"\" || keys4[2] === \"\") {\n            return;\n        } else {\n            const keys3Int = parseInt(keys3.join(\"\"));\n            const keys4Int = parseInt(keys4[1] + keys4[2]);\n            const sum = keys3Int+keys4Int;\n            if (sum < 100) {\n                const digitsArray = sum.toString().split('');\n                const bothDigitsExistInKeys0 = digitsArray.every((digit) => keys0.includes(digit));\n                if (bothDigitsExistInKeys0) {\n                    setKeys5(digitsArray);\n                    let newKeys0 = [...keys0];\n                    digitsArray.forEach((val) => {\n                        let returnIndex = keys0.indexOf(val);\n                        newKeys0[returnIndex] = \"\";\n                    })\n                    setKeys0(newKeys0);\n                    gameOver()\n                } else {\n                    let newDigitsArray = [...digitsArray];\n                    digitsArray.forEach((val) => {\n                        if (!keys0.includes(val)) {\n                            let returnIndex = digitsArray.indexOf(val);\n                            newDigitsArray[returnIndex] = \"\";\n                        };\n                    })\n                    setKeys5(newDigitsArray);\n                    resetBadSum()\n                    resetBadProduct()\n                }\n            } else {\n                resetBadSum()\n                resetBadProduct()\n            }\n        }\n    } \n\n    useEffect(() => {\n        findProduct()\n    }, [keys2]);\n\n    useEffect(() => {\n        findSum()\n    }, [keys4]);\n\n    const addNumber = (key) => {\n        let newKeys0 = [...keys0]\n        let newKeys1 = [...keys1]\n        let newKeys2 = [...keys2]\n        let newKeys4 = [...keys4]\n        let newPlayableArray = [...keys1, keys2[1], keys4[1], keys4[2]];\n        if (keys0.includes(key)) {\n            const emptyIndex = newPlayableArray.findIndex((val) => val === \"\");\n            const keyIndex = newKeys0.findIndex((val) => val === key);\n            if (emptyIndex < 2) {\n                if (newKeys1[0] === \"\") {\n                    newKeys1[0] = key;\n                } else if (newKeys1[1] === \"\") {\n                    newKeys1[1] = key;\n                }\n                setKeys1(newKeys1)\n            } else if (emptyIndex === 2) {\n                newKeys2[1] = key;\n                setKeys2(newKeys2)\n            } else if (emptyIndex > 2) {\n                if (newKeys4[1] === \"\") {\n                    newKeys4[1] = key;\n                } else if (newKeys4[2] === \"\") {\n                    newKeys4[2] = key;\n                }\n                setKeys4(newKeys4)\n            } else {\n                return\n            }\n            newKeys0[keyIndex] = \"\";\n            setKeys0(newKeys0)\n        }\n        \n    }\n\n    const handleKeyboard = useCallback((event) => {\n        if (disableKeyPressRef.current) {\n            event.preventDefault();\n            return;\n        } else if (event.key === \" \") {\n            setGameChosen({gameChosen: false, gameNumber: ''});\n        } else {\n            keys0.forEach((key) => {\n                if (event.key === key) {\n                    addNumber(key)\n            }});\n        }\n    });\n\n    // useEffect(() => {\n    //     document.addEventListener(\"keydown\", handleKeyboard);\n\n    //     return () => {\n    //         document.removeEventListener(\"keydown\", handleKeyboard);\n    //     };\n    // }, [handleKeyboard]);\n\n    useKeydownEffect(handleKeyboard, [handleKeyboard]);\n\n    return (\n        <div className=\"keyboard\" onKeyDown={handleKeyboard}>\n            <Keyboard8Context.Provider\n                value={{\n                addNumber}}>\n            <div className='line0'>{keys0.map((key, index) => {\n                const uniqueKey = `0-${index}`;\n                return <Key keyVal={key} key={uniqueKey} clickableKey={true} />;\n            })}</div>\n            <div className='line1'>\n                {keys1.map((key, index) => {\n                const uniqueKey = `1-${index}`;\n                return <Key keyVal={key} key={uniqueKey} clickableKey={false} guessKey />;\n            })}</div>\n            <div className='line2'>\n                {keys2.map((key, index) => {\n                const uniqueKey = `2-${index}`;\n                const isSymbol = index === 0;\n                return <Key keyVal={key} key={uniqueKey} clickableKey={false} symbol={isSymbol ? true : undefined} guessKey={index===1} />;})}\n            </div>\n            <hr width='200px' size='3' color='#444444' />\n            <div className='line3'>{keys3.map((key, index) => {\n                const uniqueKey = `3-${index}`;\n                return <Key keyVal={key} key={uniqueKey} clickableKey={false} guessKey />;\n                })}\n            </div>\n            <div className='line4'>\n                {keys4.map((key, index) => {\n                const uniqueKey = `4-${index}`;\n                const isSymbol = index === 0 || index === 3;\n                return <Key keyVal={key} key={uniqueKey} clickableKey={false} symbol={isSymbol ? true : undefined} guessKey={index===1 || index===2} />;})}\n            </div>\n            <hr width='200px' size='3' color='#444444' />\n            <div className='line5'>{keys5.map((key, index) => {\n                const uniqueKey = `5-${index}`;\n                return <Key keyVal={key} key={uniqueKey} clickableKey={false} guessKey />;\n                })}\n            </div>\n            <div className='line6'>< Spacebar keyVal={symbolResponse} /></div>\n            </Keyboard8Context.Provider>\n        </div>\n    )\n\n}\n\nexport default Keyboard8","import React, { useContext } from 'react'\nimport { AppContext } from '../../App';\nimport { FaCheck, FaTimes } from '../IconModule';\n\nfunction Spacebar({ keyVal }) {\n  const { setGameChosen} = useContext(AppContext);\n  const selectLetter = () => {\n    setGameChosen({gameChosen: false, gameNumber: ''});\n    };\n\n    let iconComponent = null;\n    let iconColorClass = '';\n\n    if (keyVal === 'check') {\n      iconComponent = <FaCheck />;\n      iconColorClass = 'check-color';\n    } else if (keyVal === 'times') {\n      iconComponent = <FaTimes />;\n      iconColorClass = 'times-color';\n  }\n\n  return (\n      <div className={`key spacebar ${iconColorClass}`}  onClick={selectLetter}>\n        {iconComponent}\n      </div>\n    )\n}\n\nexport default Spacebar"],"names":["_ref","keyVal","guessKey","clickableKey","symbol","addNumber","useContext","Keyboard8Context","iconComponent","_jsx","GoDotFill","className","onClick","children","createContext","_useContext","AppContext","setGameChosen","keysColor","setKeysColor","_useState","useState","_useState2","_slicedToArray","keys0","setKeys0","_useState3","_useState4","keys1","setKeys1","_useState5","_useState6","keys2","setKeys2","_useState7","_useState8","keys3","setKeys3","_useState9","_useState10","keys4","setKeys4","_useState11","_useState12","keys5","setKeys5","_useState13","_useState14","symbolResponse","setSymbolResponse","disableKeyPressRef","useRef","resetBadProduct","current","setTimeout","resetBadSum","findSum","includes","sum","parseInt","join","digitsArray","toString","split","every","digit","newKeys0","_toConsumableArray","forEach","val","returnIndex","indexOf","newKeysColor","gameChosen","gameNumber","newDigitsArray","useEffect","product","findProduct","key","newKeys1","newKeys2","newKeys4","newPlayableArray","concat","emptyIndex","findIndex","keyIndex","handleKeyboard","useCallback","event","preventDefault","useKeydownEffect","onKeyDown","_jsxs","Provider","value","map","index","uniqueKey","Key","isSymbol","undefined","width","size","color","Spacebar","iconColorClass","FaCheck","FaTimes"],"sourceRoot":""}